# -*- coding: utf-8 -*-
"""Simulator_cement.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E5yewnZSIgb88bNVTPEIdMXFBH16xXSM
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""# Parameters"""

cement_production_increase_2035 = 1.8
cement_production_increase_2050 = 2.2

cement_clinker_2035 = 0.60
cement_clinker_2050 = 0.55

energy_efficiency_2035=0.3
energy_efficiency_2050 = 0.5

def calculate_emissions(cement_production_increase_2035,cement_production_increase_2050,cement_clinker_2035,cement_clinker_2050,energy_efficiency_2035,energy_efficiency_2050):
    """# Cement Production"""
    
    production_cement = pd.read_csv('cement_production.csv',sep = ';')
    production_cement = production_cement.set_index ('Year')

    
    """# Energy Consumption 2005 - 2019 in GJ"""
    
    energy_consumption_ktep = pd.read_csv('energy_consumption.csv', sep = ';')
    converstion_ktep_to_gj = 0.04185
    energy_consumption_ktep = energy_consumption_ktep.set_index('Year')
    energy_consumption = energy_consumption_ktep*converstion_ktep_to_gj

    
    """# Emission 2005 -2019"""
    
    emission_2005_2019 = pd.read_csv('emissions_2005_2019.csv',sep = ';')
    emission_2005_2019 = emission_2005_2019.drop(columns= emission_2005_2019.iloc[:,6:])
    emission_2005_2019 = emission_2005_2019.drop(index = emission_2005_2019.index[15:])
    emission_2005_2019 = emission_2005_2019.set_index('Year')

    
    """# Energy Intensity"""
    
    cement_energy_intensity = energy_consumption['Cement']/production_cement['Production']

    
    """# Emission intensity"""
    
    cement_EI_energy = emission_2005_2019['Cement (Energy)']/production_cement['Production']
    cement_EI_process= emission_2005_2019['Cement (process)']/production_cement['Production']
    
    cement_EI = pd.concat([cement_EI_energy,cement_EI_process],axis =1)
    cement_EI.columns = ['Cement Energy EI','Cement Process EI']
   
    
    """# New level of production"""
    
    cement_production_2035 = cement_production_increase_2035*production_cement['Production'][2019]
    cement_production_2050 = cement_production_increase_2050*production_cement['Production'][2019]
    
    for i in np.linspace(2020,2050,31):
      production_cement.loc[i] = np.nan
    
    production_cement.loc[2035] = [cement_production_2035,cement_clinker_2035]
    production_cement.loc[2050] = [cement_production_2050,cement_clinker_2050]
    
    #projecting the level of production
    production_ratio_2035 = (production_cement.loc[2035]['Production']/production_cement.loc[2019]['Production'])**(1/16)
    production_ratio_2050 = (production_cement.loc[2050]['Production']/production_cement.loc[2035]['Production'])**(1/15)
    
    for i in np.linspace(2020,2034,15):
      production_cement.loc[i]['Production']= production_cement.loc[i-1]['Production']*production_ratio_2035 
    for i in np.linspace(2036,2049,14):
      production_cement.loc[i]['Production'] = production_cement.loc[i-1]['Production']*production_ratio_2050
    
    #projecting the clinker-cement ratio
      
    production_ratio_2035 = (production_cement.loc[2035]['clinker ratio']/production_cement.loc[2019]['clinker ratio'])**(1/16)
    production_ratio_2050 = (production_cement.loc[2050]['clinker ratio']/production_cement.loc[2035]['clinker ratio'])**(1/15)
    
    for i in np.linspace(2020,2034,15):
      production_cement.loc[i]['clinker ratio']= production_cement.loc[i-1]['clinker ratio']*production_ratio_2035 
    for i in np.linspace(2036,2049,14):
      production_cement.loc[i]['clinker ratio'] = production_cement.loc[i-1]['clinker ratio']*production_ratio_2050
    
    
    
    """Projection of emissions"""
    #Energy emissions
    
    FE_clinker = 0.536
    
    for i in np.linspace(2020,2050,31):
        cement_EI .loc[i] = np.nan
    
    cement_EI.loc[2035] = cement_EI.loc[2019]*(1-energy_efficiency_2035)
    cement_EI.loc[2050] = cement_EI.loc[2019]*(1-energy_efficiency_2050)
    
    EI_reduction_ratio_2035 = (cement_EI.loc[2035]['Cement Energy EI']/cement_EI.loc[2019]['Cement Energy EI'])**(1/16)
    EI_reduction_ratio_2050 = (cement_EI.loc[2050]['Cement Energy EI']/cement_EI.loc[2035]['Cement Energy EI'])**(1/15)
    
    for i in np.linspace(2020,2034,15):
      cement_EI.loc[i] = cement_EI.loc[i-1]*EI_reduction_ratio_2035 
    for i in np.linspace(2036,2049,14):
      cement_EI.loc[i] = cement_EI.loc[i-1]*EI_reduction_ratio_2050
      
    emission_2005_2050 = production_cement['Production']*cement_EI['Cement Energy EI']+production_cement['Production']*production_cement['clinker ratio']*FE_clinker

    return(emission_2005_2050)

emissions_BAU = calculate_emissions(1.8,2.2,.64,.64,0,0)    
emissions_reductions = calculate_emissions(cement_production_increase_2035,cement_production_increase_2050,cement_clinker_2035,cement_clinker_2050,energy_efficiency_2035,energy_efficiency_2050)


plt.plot(emissions_reductions)
plt.plot(emissions_BAU)
plt.annotate("{:.2f}".format(emissions_BAU[2050]),(2050,emissions_BAU[2050]))
plt.annotate("{:.2f}".format(emissions_reductions[2050]),(2050,emissions_reductions[2050]))
plt.annotate("{:.2f}".format(emissions_reductions[2019]),(2019,emissions_reductions[2019]))